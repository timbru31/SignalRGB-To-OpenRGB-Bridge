/// <reference types="node" />
export interface RGBColor {
    red: number;
    green: number;
    blue: number;
}
export interface Mode {
    id: number;
    name: string;
    value: number;
    flags: number;
    speedMin: number;
    speedMax: number;
    brightnessMin?: number;
    brightnessMax?: number;
    colorMin: number;
    colorMax: number;
    speed: number;
    brightness?: number;
    direction: number;
    colorMode: number;
    colors: RGBColor[];
    flagList: string[];
}
export interface Segment {
    name: string;
    type: number;
    start: number;
    length: number;
}
export interface Matrix {
    size: number;
    height: number;
    width: number;
    keys: (number | undefined)[][];
}
export interface Zone {
    name: string;
    id: number;
    type: number;
    ledsMin: number;
    ledsMax: number;
    ledsCount: number;
    resizable: boolean;
    matrix?: Matrix;
    segments?: Segment[];
    flags?: number;
    flagList?: string[];
}
export default class Device {
    deviceId: number;
    type: number;
    name: string;
    vendor?: string;
    description: string;
    version: string;
    serial: string;
    location: string;
    activeMode: number;
    modes: Mode[];
    zones: Zone[];
    leds: {
        name: string;
        value: number;
    }[];
    colors: RGBColor[];
    alternateLEDsNames?: string[];
    flags?: number;
    flagList?: string[];
    constructor(buffer: Buffer, deviceId: number, protocolVersion: number);
}
//# sourceMappingURL=device.d.ts.map